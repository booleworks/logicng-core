syntax = "proto3";
package solver;
import "collections.proto";
import "solver_datastructures.proto";
import "solver_commons.proto";
option java_package = "com.booleworks.logicng.serialization";
option java_outer_classname = "ProtoBufSatSolver";

message PbSatSolver {
  PbSatSolverConfig config = 1;
  bool inSatCall = 2;

  map<string, int32> name2idx = 3;
  collections.PbIntVector validStates = 4;
  int32 nextStateId = 5;

  bool ok = 6;
  int32 qhead = 7;
  collections.PbIntVector unitClauses = 8;
  PbClauseVector clauses = 9;
  PbClauseVector learnts = 10;
  PbWatcherVectorVector watches = 11;
  PbVariableVector vars = 12;
  PbHeap orderHeap = 13;
  collections.PbIntVector trail = 14;
  collections.PbIntVector trailLim = 15;
  collections.PbBooleanVector model = 16;
  collections.PbIntVector assumptionConflict = 17;
  collections.PbIntVector assumptions = 18;
  repeated bytes assumptionPropositions = 19;
  collections.PbBooleanVector seen = 20;
  int32 analyzeBtLevel = 21;
  double claInc = 22;
  double varInc = 23;
  double varDecay = 24;
  int32 clausesLiterals = 25;
  int32 learntsLiterals = 26;

  repeated solver.PbProofInformation pgOriginalClauses = 27;
  collections.PbIntVectorVector pgProof = 28;

  bool computingBackbone = 29;
  collections.PbIntVector backboneCandidates = 30;
  collections.PbIntVector backboneAssumptions = 31;
  map<int32, PbTristate> backboneMap = 32;

  collections.PbIntVector selectionOrder = 33;
  int32 selectionOrderIdx = 34;

  PbWatcherVectorVector watchesBin = 35;
  collections.PbIntVector permDiff = 36;
  collections.PbIntVector lastDecisionLevel = 37;
  PbBoundedLongQueue lbdQueue = 38;
  PbBoundedIntQueue trailQueue = 39;
  int32 myflag = 40;
  int64 analyzeLBD = 41;
  int32 nbClausesBeforeReduce = 42;
  int32 conflicts = 43;
  int32 conflictsRestarts = 44;
  double sumLBD = 45;
  int32 curRestart = 46;
}
