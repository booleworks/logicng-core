syntax = "proto3";
package solver;
import "collections.proto";
option java_package = "com.booleworks.logicng.serialization";
option java_outer_classname = "ProtoBufSolverDatastructures";

enum PbTristate {
  FALSE = 0;
  TRUE = 1;
  UNDEF = 2;
}

message PbClause {
  collections.PbIntVector data = 1;
  int32 learntOnState = 2;
  bool isAtMost = 3;
  double activity = 4;
  bool seen = 6;
  int64 lbd = 7;
  bool canBeDel = 8;
  bool oneWatched = 9;
  int32 atMostWatchers = 10;
  int32 id = 11;
}

message PbClauseVector {
  repeated PbClause element = 1;
}

message PbWatcher {
  int32 clause = 1;
  int32 blocker = 2;
}

message PbWatcherVector {
  repeated PbWatcher element = 1;
}

message PbWatcherVectorVector {
  repeated PbWatcherVector element = 1;
}

message PbVariable {
  PbTristate assignment = 1;
  int32 level = 2;
  int32 reason = 3;
  double activity = 4;
  bool polarity = 5;
  bool decision = 6;
}

message PbVariableVector {
  repeated PbVariable element = 1;
}

message PbHeap {
  collections.PbIntVector heap = 1;
  collections.PbIntVector indices = 2;
}

message PbBoundedIntQueue {
  collections.PbIntVector elems = 1;
  int32 first = 2;
  int32 last = 3;
  int64 sumOfQueue = 4;
  int32 maxSize = 5;
  int32 queueSize = 6;
}

message PbBoundedLongQueue {
  collections.PbLongVector elems = 1;
  int32 first = 2;
  int32 last = 3;
  int64 sumOfQueue = 4;
  int32 maxSize = 5;
  int32 queueSize = 6;
}

message PbProofInformation {
  collections.PbIntVector clause = 1;
  optional bytes proposition = 2;
}
